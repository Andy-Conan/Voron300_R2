# Этот макрос был предоставлен пользователем discord Garrettwp, которому я выражаю свою благодарность за то, что он поделился им со мной.
# Я его сильно подправил.
# Они основаны на макросах great Annex magprobe , подключаемых к зонду "#Первоначально разработанных компанией Mental,
# изменено для лучшего использования на принтерах серии K компанией RyanG and Trails ", слава им.
# С тех пор этот макрос превратился в плагин klipper, который в настоящее время ожидает включения в klipper,
# подробнее здесь, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# Пользователь richardjm переработал макропеременные и добавил некоторые функции, большое спасибо
# стоя на плечах гигантов, давайте посмотрим, сможем ли мы увидеть дальше
#
# текущий параметр home для этой версии - https://github.com/jlas1/Klicky-Probe
# приведенные ниже значения 1000 выдают ошибку вместо того, чтобы делать что-то неправильно, надеюсь, это не будет использоваться для принтера размером более 1 метра

[gcode_macro _User_Variables]
variable_verbose:             True    # Включить подробный вывод
variable_debug:              False    # Enable Debug output
variable_travel_speed:         200    # с какой скоростью будут выполняться все остальные перемещения при выполнении этих макросов
variable_move_accel:          1000    # с какой скоростью должна разгоняться инструментальная головка при перемещении
variable_dock_speed:            50    # с какой скоростью должна двигаться инструментальная головка при закреплении зонда для окончательного перемещения
variable_release_speed:         75    # с какой скоростью должна двигаться инструментальная головка, чтобы ослабить фиксацию магнитов после закрепления
variable_z_drop_speed:          20    # с какой скоростью z будет снижаться при перемещении в положение z для очистки зонда

variable_safe_z:         	    25    # Минимальное значение Z для функций присоединения / закрепления и наведения
                                      # если true, то слой отодвинется от сопла, когда Z не установлен на место.
variable_enable_z_hop:        True    # True для версии v2.4, False для версии v1.8, Trident и Legacy

variable_max_bed_y:            300    # максимальный размер кровати позволяет избежать выполнения probe_accuracy вне кровати
variable_max_bed_x:            300    # максимальный размер кровати позволяет избежать выполнения probe_accuracy вне кровати

# если используется отдельный переключатель Z endstop, укажите здесь координаты переключателя (Voron).
# Установите значение 0, чтобы зонд переместился в центр кровати.
variable_z_endstop_x:         207
variable_z_endstop_y:         300

#Проверьте документацию по конфигурации стыковки / расстыковки klipper для конкретного принтера, это фиктивные значения
#расположение дока
variable_docklocation_x:        34    # X Положение док-станции
variable_docklocation_y:       300    # Положение стыковки Y
variable_docklocation_z:      -128    # Z положение стыковки (-128 для крепления портала/рамы)
#variable_dockarmslenght:        30    # Длина причальных рычагов, 

#Следующие переменные используются, если док-станция выдвигается и убирается с помощью серводвигателя
variable_enable_dock_servo:  False    # Установите значение true, если ваша док-станция klicky управляется сервоприводом
variable_servo_name:        'NAME'    # Имя сервопривода док-станции, определенное в файле printer.cfg в разделе [сервопривод]
variable_servo_deploy:          10    # Этот ПРИМЕР представляет собой значение, используемое для полного развертывания сервопривода
variable_servo_retract:         11    # Этот ПРИМЕР представляет собой значение, используемое для полного втягивания сервопривода (initial_angle в конфигурации [servo]).
variable_servo_delay:          250    # Это задержка для ожидания достижения сервоприводом требуемого положения, будьте осторожны с высокими значениями

#Перемещение дока, заключительное движение головки инструмента для высвобождения зонда из дока
#это относительный шаг
Variable_dockmove_x:            40    # Заключительное движение головки инструмента для высвобождения
Variable_dockmove_y:             0    # зонд в док-станции
Variable_dockmove_z:             0    # (может быть отрицательным)

#Перемещение крепления. последнее движение головки инструмента для крепления датчика к креплению
#это относительный шаг
Variable_attachmove_x:           0    # Заключительное движение головки инструмента для закрепления
Variable_attachmove_y:          30    # зонд на док-станции
Variable_attachmove_z:           0    # (может быть отрицательным)

#Пуповина, помогающая распутать пуповину в сложных ситуациях
variable_umbilical:          False    # должны ли мы распутать пуповину
variable_umbilical_x:           15    # X положение пупка
variable_umbilical_y:           15    # Y положение пуповины

# место для парковки инструментальной головки
variable_park_toolhead:      False    # Включить парковку инструментальной головки
variable_parkposition_x:       150
variable_parkposition_y:       150
variable_parkposition_z:        30

variable_version:                1    # Помогает пользователям обновлять необходимые переменные, не обновляйте, если указанные выше переменные не обновлены

#Ниже этого примечания обычно вам не нужно настраивать
#Прикрепить move2
Variable_attachmove2_x:          0    # промежуточное перемещение головки инструмента для крепления
Variable_attachmove2_y:          0    # зонд на причале
Variable_attachmove2_z:          0    # (может быть отрицательным)

variable_home_backoff_x:         0    # на сколько мм отойти от концевого упора X после наведения X
                                      # это полезно для voron v0, чтобы позволить головке инструмента смещаться в сторону для обеспечения неограниченного Y-образного наведения
variable_home_backoff_y:         0    # на сколько мм отойти от Y-образного упора после наведения Y

variable_override_homing:       ''    # настраивает, какую ось установить домой в первую очередь
                                      #  " = поведение с кликами по умолчанию (пытается избежать попадания в док)
                                      # 'X' = сначала отправляет X домой.
                                      # 'Y' = сначала отправляет Y домой.
                                      
variable_dock_on_zhome:       True    # при необходимости закрепляет зонд в режиме Z-наведения (позволяет избежать удара о станину на некоторых принтерах                                      

# Do not modify below
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
    {% endif %}
