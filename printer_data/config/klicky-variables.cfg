# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper,
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe
# the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter

[gcode_macro _User_Variables]
variable_verbose:             True    # Включить подробный вывод
variable_debug:              False    # Включить отладочный вывод
variable_travel_speed:         200    # с какой скоростью будут выполняться все остальные перемещения при выполнении этих макросов
variable_move_accel:          1000    # с какой скоростью должна разгоняться инструментальная головка при перемещении
variable_dock_speed:            50    # с какой скоростью должна двигаться инструментальная головка при закреплении зонда для окончательного перемещения
variable_release_speed:         75    # с какой скоростью должна двигаться инструментальная головка, чтобы ослабить фиксацию магнитов после закрепления
variable_z_drop_speed:          20    # с какой скоростью z будет снижаться при перемещении в положение z для очистки зонда

variable_safe_z:         	    25    # Минимальное значение Z для функций присоединения / закрепления и наведения
                                      # если true, то слой отодвинется от сопла, когда Z не установлен на место.
variable_enable_z_hop:        True    # True для версии v2.4, False для версии v1.8, Trident и Legacy

variable_max_bed_y:            300    # максимальный размер кровати позволяет избежать проверки точности за пределами кровати
variable_max_bed_x:            300    # максимальный размер кровати позволяет избежать проверки точности за пределами кровати

# если используется отдельный концевой выключатель Z, укажите координаты переключателя здесь (Voron).
# Установите значение 0, чтобы зонд переместился в центр кровати.
variable_z_endstop_x:         207
variable_z_endstop_y:         300

#Проверьте документацию по конфигурации стыковки / расстыковки klipper для конкретного принтера, это фиктивные значения расположение дока
variable_docklocation_x:        34    # X Положение дока
variable_docklocation_y:       300    # Y Положение дока
variable_docklocation_z:      -128    # Z положение стыковки (-128 для крепления портала/рамы)

# Следующие переменные используются, если док-станция выдвигается и убирается с помощью серводвигателя
variable_enable_dock_servo:  False    # Set to true if your klicky dock is servo-controlled
variable_servo_name:        'NAME'    # The name of the dock servo defined in printer.cfg under [servo]
variable_servo_deploy:          10    # This EXAMPLE is the value used to deploy the servo fully
variable_servo_retract:         11    # This EXAMPLE is the value used to retract the servo fully (initial_angle in [servo] config)
variable_servo_delay:          250    # This is a delay to wait the servo to reach the requested position, be carefull with high values

# Перемещение дока, последнее движение головки инструмента для высвобождения зонда из дока, это относительное перемещение
Variable_dockmove_x:            40    # Заключительное движение головки инструмента для высвобождения
Variable_dockmove_y:             0    # зонд в док-станции
Variable_dockmove_z:             0    # (может быть отрицательным)

# Перемещение крепления. последнее перемещение головки инструмента для крепления датчика к креплению - относительное перемещение
Variable_attachmove_x:           0    # Заключительное движение головки инструмента для закрепления
Variable_attachmove_y:          30    # зонд на док-станции
Variable_attachmove_z:           0    # (может быть отрицательным)

#Пуповина, помогающая распутать пуповину в сложных ситуациях
variable_umbilical:          False    # should we untangle the umbilical
variable_umbilical_x:           15    # X umbilical position
variable_umbilical_y:           15    # Y umbilical position

# место для парковки инструментальной головки
variable_park_toolhead:      False    # Включить парковку инструментальной головки
variable_parkposition_x:       150
variable_parkposition_y:       150
variable_parkposition_z:        10

variable_version:                1    # Helps users to update the necessary variables, do not update if the variables above are not updated

#Под этим замечанием обычно вам не нужно настраивать Attach move2
Variable_attachmove2_x:          0    # intermediate toolhead movement to attach
Variable_attachmove2_y:          0    # the probe on the dock
Variable_attachmove2_z:          0    # (can be negative)

variable_home_backoff_x:        10    # how many mm to move away from the X endstop after homing X
                                      # this is useful for the voron v0 to enable the toolhead to move out of the way to allow an unstricted Y homing
variable_home_backoff_y:        10    # how many mm to move away from the Y endstop after homing Y

variable_override_homing:       ''    # configures what axis to home first
                                      #  '' = default klicky behavior (tries to avoid the hitting the dock)
                                      # 'X' = forces X to home first
                                      # 'Y' = forces Y to home first
                                      
variable_dock_on_zhome:       True    # docks the probe on Z Homing if not necessary (avoids hitting the bed on some printers                                      

# Не изменять приведенное ниже
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
    {% endif %}
